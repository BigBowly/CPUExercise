# legend

# 001101 - load from register
# 001100 - store in register
# 001000 - store in memory
# 001001 - load from memory
# 011001 - jump - create output
# 011011 - prints output
# 000010 - arithmetic
# f000001 - addition
# f000010 - subtraction
# f000011 - multiplication
# f000100 - division



# storage

# store number 11011 in register 00001
001100 00001 000000000000000011011
# store register 00001 to memory 00001
001000 00001 00001 00000 00000 000000
# zero out register 00001
001100 00001 000000000000000000000
# store number 101 in register 00010
001100 00010 000000000000000000101
# store register 00010 in memory 00010
001000 00010 00010 00000 00000 000000
# zero out register 00010
001100 00010 000000000000000000000
# store number 1111 in register 00011
001100 00011 000000000000000001111
# store register 00011 in memory 00011
001000 00011 00011 00000 00000 000000
# zero out register 00011
001100 00011 000000000000000000000
# store number 10011 in register 00100
001100 00100 000000000000000010011
# store register 00100 in memory 00100
001000 00100 00100 00000 00000 000000
# zero out register 00100
001100 00100 000000000000000000000
# store number 1011 in register 00101
001100 00101 000000000000000001011
# store register 00101 in memory 00101
001000 00101 00101 00000 00000 000000
# zero out register 00101
001100 00101 000000000000000000000
# store number 10 in register 00110
001100 00110 000000000000000000010
# store register 00110 in memory 00110
001000 00110 00110 00000 00000 000000
# zero out register 00110
001100 00110 000000000000000000000


# loading and arithmetic

# addition

# load from memory block 00001 into register 00001
001001 00001 00001 00000 00000 000000
# load from memory block 00010 into register 00010
001001 00010 00010 00000 00000 000000
# ADD values in registers 00001, 00010
000010 00001 00010 00111 00000 000001
# jump result to output and store result in memory address 11110
011001 00111 000000000000000000000
# show output
011011 00000000000000000000000000
# zero out register 00001
001100 00001 000000000000000000000
# zero out register 00010
001100 00010 000000000000000000000
# zero out register 00111
001100 00111 000000000000000000000

# subtraction

# load from memory block 00011 into register 00001
001001 00011 00001 00000 00000 000000
# load from memory block 00010 into register 00010
001001 00010 00010 00000 00000 000000
# SUB values in register 00001, 00010
000010 00001 00010 00111 00000 000010
# jump result to output and store result in memory address 11110
011001 00111 000000000000000000000
# show output
011011 00000000000000000000000000
# zero out register 00001
001100 00001 000000000000000000000
# zero out register 00010
001100 00010 000000000000000000000
# zero out register 00111
001100 00111 000000000000000000000

# multiplication

# load from memory block 00100 into register 00001
001001 00100 00001 00000 00000 000000
# load from memory block 00101 into register 00010
001001 00101 00010 00000 00000 000000
# MULT values in register 00001, 00010
000010 00001 00010 00111 00000 000011
# jump result to output and store result in memory address 11110 with possible overflow
011001 00111 000000000000000000000
# show output
011011 00000000000000000000000000
# zero out register 00001
001100 00001 000000000000000000000
# zero out register 00010
001100 00010 000000000000000000000
# zero out register 00111
001100 00111 000000000000000000000
# zero out register 01000
001100 01000 000000000000000000000

# division

# load from memory block 00101 into register 00001
001001 00101 00001 00000 00000 000000
# load from memory block 00110 into register 00010
001001 00110 00010 00000 00000 000000
# DIV value in register 00001, 00010
000010 00001 00010 00111 00000 000100
# jump result to output and store result in memory address 11110 with possible overflow
011001 00111 000000000000000000000
# show output
011011 00000000000000000000000000
# zero out register 00001
001100 00001 000000000000000000000
# zero out register 00010
001100 00010 000000000000000000000
# zero out register 00111
001100 00111 000000000000000000000
# zero out register 01000
001100 01000 000000000000000000000



